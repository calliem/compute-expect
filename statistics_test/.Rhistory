x1.random <- c(2.6390573296152584,1.0986122886681098,2.772588722239781,3.295836866004329,0.6931471805599453,3.6109179126442243,1.6094379124341003,2.1972245773362196,3.4011973816621555,1.791759469228055,3.332204510175204,1.6094379124341003,1.3862943611198906,1.6094379124341003,1.0986122886681098,1.3862943611198906,2.6390573296152584,2.4849066497880004,0.6931471805599453,0.6931471805599453)
x2.random <- c(7.272398392570047,2.3978952727983707,2.5649493574615367,2.772588722239781,2.0794415416798357,0.0,2.8903717578961645,3.9318256327243257,3.091042453358316,1.791759469228055,4.762173934797756,1.9459101490553132,2.0794415416798357,3.4657359027997265,4.174387269895637,2.302585092994046,5.429345628954441,3.5263605246161616,2.0794415416798357,4.48863636973214)
x1.random
x2.random
length(x2.random)
length(x1.random)
y.random <- c(0.5103698665557886,0.06258533725369518,0.12715494426192991,0.18706485014751498,0.0,0.01391734794802006,0.10378078359964121,0.07500496128175987,0.10775878416808246,0.0617105556277457,0.25735836074637314,0.061885035916330794,0.06118790337413626,0.061885035916330794,0.03618242116277272,0.061885035916330794,0.23009934914025962,0.1115991899083132,0.030942517958165397,0.0195936510734699)
fit <- lm(y.random ~ x1.random + x2.random)
summary(fit)
fit
summary(fit)
fit
studres(fit)
library(MASS)
studres(fit)
sm <- summary(fit)
mse <- function(sm) {
mse <- mean(sm$residuals^2)
return(mse)
}
mse(sm)
sm$x1.random
fit$x1.random
sm
?summary
hii <- 0.15263686453386827
sm$coefficients
sm$coefficients[1,1]
sm$coefficients[1,2]
sm$coefficients[2,1]
rawResidual <- y.random[4] - (sm$coefficients[1,1] + x1.random*sm$coefficients[2,1] + x2.random[4]*sm$coefficients[3,1])
rawResidual
y.random
y.random[4]
(sm$coefficients[1,1] + x1.random*sm$coefficients[2,1] + x2.random[4]*sm$coefficients[3,1])
rawResidual <- y.random[4] - (sm$coefficients[1,1] + x1.random[4]*sm$coefficients[2,1] + x2.random[4]*sm$coefficients[3,1])
rawResidual
rawResidual / sqrt(mse(sm))
rawResidual / sqrt(mse(sm) * sqrt(1-hii))
mse(sm)
hii <- 0.15263686453386827
rawResidual / sqrt(mse(sm) * sqrt(1-hii))
0.03272767784564373/ sqrt(0.0032882886615308235 * sqrt(1-0.15263686453386827))
sqrt(mse(sm) * sqrt(1-hii))
rawResidual
0.03272768/0.05501769
0.03272767784564373/0.05278612119253022
studres
?studres
debug(studres)
studres()
studres()
undebug(studres)
edit(studres)
lmwork
3!
fact(3)
fac(3)
?factorial
1-1/(factorial(365)/factorial(365-25))
1-1/(factorial(365)/factorial(365-23))
365 choose 5
c(365, 23)
?hatvalues
# Simulating a test dataset with 2 independent variables
# Run OLS on the test dataset and compare results with Python StatsModel script and Java OLSMultipleLinearRegression package
# fixed, true values
beta1 <- .12345
beta2 <- .3427
calculateY <- function(x_1, x_2){
error <- rnorm(1, 0, .5)
y <- x_1*beta1 + x_2*beta2 + error
return(y)
}
n <- 5 # num datapoints
y <- NA
x1 <- numeric(n)
x2 <- numeric(n)
for (i in 1:length(x1)){
x1[i] <- runif(1,0,10)
x2[i] <- runif(1,0,10)
}
for (i in 1: length(x1)){
y[i] <- calculateY(x1[i], x2[i])
}
fit <- lm(y ~ x1 + x2)
# Outputted coefficients: -2.0789, 0.2675, 0.5282
# test with current datapoints
x1.test <- c(4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515,4.02535169073515)
x2.test <- c(4.110873864173311,4.8283137373023015,4.90527477843843,4.672828834461906,2.302585092994046,1.9459101490553132,4.174387269895637,4.5217885770490405,2.70805020110221,2.302585092994046,1.3862943611198906,1.3862943611198906,2.4849066497880004,2.0794415416798357,4.574710978503383,3.258096538021482,4.59511985013459,5.863631175598097,4.23410650459726,0.0,4.127134385045092,2.3978952727983707,0.6931471805599453,5.4510384535657,1.9459101490553132,5.966146739123692,2.1972245773362196,3.295836866004329,3.258096538021482,3.7376696182833684,3.6375861597263857,2.1972245773362196,5.10594547390058,1.9459101490553132,4.31748811353631,1.0986122886681098,2.4849066497880004,4.189654742026425,4.406719247264253,5.393627546352362,2.5649493574615367,3.8501476017100584,4.31748811353631,5.886104031450156,2.8903717578961645,4.343805421853684,2.6390573296152584,4.04305126783455,2.0794415416798357,4.174387269895637,2.4849066497880004,0.6931471805599453,3.1780538303479458,1.0986122886681098,3.6635616461296463,4.820281565605037,4.143134726391533,1.0986122886681098,1.0986122886681098,4.02535169073515,2.8903717578961645,4.04305126783455,0.6931471805599453,2.0794415416798357,2.1972245773362196,2.0794415416798357,2.302585092994046,5.153291594497779,2.0794415416798357,3.58351893845611,4.110873864173311,0.6931471805599453,3.332204510175204,2.5649493574615367,2.5649493574615367,1.3862943611198906,2.302585092994046,4.48863636973214,4.31748811353631,2.6390573296152584,1.3862943611198906,5.049856007249537,3.9318256327243257,2.5649493574615367,4.553876891600541,0.6931471805599453,2.302585092994046,3.1780538303479458,1.6094379124341003,3.9512437185814275,4.543294782270004,3.091042453358316,3.9512437185814275,2.0794415416798357,2.8903717578961645,2.995732273553991,3.4011973816621555,0.6931471805599453,3.295836866004329,0.0,0.6931471805599453,0.6931471805599453,4.477336814478207,6.156978985585555,6.139884552226255,6.363028103540465,2.0794415416798357,1.3862943611198906,0.6931471805599453,3.4657359027997265,1.6094379124341003,3.828641396489095,1.791759469228055,1.3862943611198906,2.70805020110221,2.995732273553991,1.791759469228055,3.828641396489095,4.189654742026425,3.6635616461296463,2.0794415416798357,3.912023005428146,2.302585092994046,2.9444389791664403,2.4849066497880004,3.6375861597263857,1.791759469228055,0.0,3.4011973816621555,2.0794415416798357,2.9444389791664403,2.4849066497880004,2.70805020110221,4.07753744390572,6.186208623900494,3.4657359027997265,1.3862943611198906,4.290459441148391,1.0986122886681098,2.5649493574615367,1.3862943611198906,3.091042453358316,3.4965075614664802,3.091042453358316,1.6094379124341003,3.5553480614894135,2.70805020110221,2.6390573296152584,4.553876891600541,3.295836866004329,2.995732273553991,3.9318256327243257,3.713572066704308,4.394449154672439,2.0794415416798357,1.791759469228055,3.295836866004329,0.6931471805599453,0.6931471805599453,5.147494476813453,3.6888794541139363,2.772588722239781,1.6094379124341003,0.6931471805599453,2.0794415416798357,1.791759469228055,4.007333185232471,0.6931471805599453,4.290459441148391,0.0,4.23410650459726,3.7376696182833684,4.574710978503383,2.8903717578961645,4.9344739331306915,1.3862943611198906,5.480638923341991,3.1780538303479458,2.0794415416798357,2.6390573296152584,1.3862943611198906,2.772588722239781,1.791759469228055,1.3862943611198906,1.791759469228055,2.302585092994046,4.8283137373023015,1.791759469228055,1.791759469228055,3.8501476017100584,1.3862943611198906,3.332204510175204,2.5649493574615367,0.6931471805599453,0.6931471805599453,2.833213344056216,2.4849066497880004,0.6931471805599453,4.762173934797756,4.343805421853684)
y.test <- c(0.2403294258323937,0.26763896100146445,0.4355696053521025,0.13913321833371048,0.07519540146398669,0.09315132586350311,0.12124088411148491,0.13408715748853178,0.11251083385556307,0.07500496128175987,0.05044256294810142,0.049957568600141,0.10378078359964121,0.0957407318406704,0.20265174293449573,0.13187034184762306,0.24383806802537547,0.15626300784181163,0.26500509710581943,0.019673527963909747,0.22906186354323055,0.058260635870357055,0.050767254383249145,0.24689938533755706,0.11721551978245823,0.2703186403854734,0.10342067084942883,0.1426964378095029,0.1575576879728802,0.1426964378095029,0.14447756780828078,0.0935798825486077,0.2663332854304996,0.10378078359964121,0.1477977364593705,0.12914343828975064,0.1352733389390769,0.2082908218163931,0.18066577557551053,0.26241550823947113,0.08522737511149917,0.18936591590503174,0.19655555657421891,0.2867412633640005,0.1008565516525065,0.2663107726767843,0.19655555657421891,0.2425541547299921,0.08082402204690345,0.4278646984478378,0.1093302522060427,0.10796382866720962,0.14393785706473694,0.07830827001578011,0.18217627523584456,0.2663332854304996,0.12278929944608932,0.09336918056643939,0.05068706626789257,0.14749265481515592,0.06940194276193591,0.16243635652267374,0.02540360530486737,0.05372068723334965,0.12995861007100784,0.10938380211946518,0.09293882741097503,0.26434949302542154,0.12278929944608932,0.09336918056643939,0.18217627523584456,0.02540360530486737,0.18217627523584456,0.11421385376431295,0.13839179764901732,0.036697107598629694,0.07538584164621351,0.16147656233228355,0.14035318307331202,0.09662357761126308,0.11421385376431295,0.12766402080000835,0.12766402080000835,0.07368490180365266,0.12124088411148491,0.005473381677902978,0.06223518658501299,0.0981229226966224,0.02540360530486737,0.0948727519169672,0.16147656233228355,0.1248684925963886,0.11081698481671996,0.07500496128175987,0.07963887537121327,0.08851424172376296,0.08687080841763106,0.027348314944070164,0.08851424172376296,0.005231139294387816,0.04947257425218059,0.050767254383249145,0.24953324923320214,0.15606232901833117,0.19242485260752903,0.19242485260752903,0.10634490279656353,0.12124088411148491,0.053412424632633626,0.11251083385556307,0.026739522463503942,0.0948727519169672,0.05060490866567528,0.021544257284174362,0.09214743181984969,0.10378078359964121,0.061536075339160605,0.1282008384043209,0.13408715748853178,0.12843822846731057,0.12201509177878711,0.14417956738064303,0.11274044062607899,0.11421385376431295,0.12124088411148491,0.12766402080000835,0.055734736974132996,0.048749090400230344,0.19655555657421891,0.09293882741097503,0.18217627523584456,0.12914343828975064,0.12493581149823213,0.18579006426135275,0.26896714932614463,0.12994135936788412,0.11608655078277724,0.19655555657421891,0.024700102566326182,0.1008565516525065,0.037372996153061035,0.12278929944608932,0.18936591590503174,0.19776176600780143,0.08876257369242077,0.19655555657421891,0.1426964378095029,0.11328504152286527,0.16018015178280046,0.10378078359964121,0.2105712171892723,0.19242485260752903,0.11081698481671996,0.2611315949440878,0.10516255096888533,0.14152481044140747,0.38831289109027944,0.02540360530486737,0.02540360530486737,0.21332745285723925,0.14392291894423398,0.12021718580060349,0.02540360530486737,0.03125460101055926,0.10378078359964121,0.048749090400230344,0.19242485260752903,0.028568702814090408,0.24540927156800943,0.0413317956302158,0.19655555657421891,0.1873005639216868,0.16018015178280046,0.06067891113974648,0.23009934914025962,0.07368490180365266,0.14749265481515592,0.12914343828975064,0.046897793475014174,0.06258533725369518,0.03096849873901103,0.07807869971990118,0.07273924355221516,0.07519540146398669,0.029262953325560382,0.09315132586350311,0.4355696053521025,0.07500496128175987,0.07731465893671755,0.06258533725369518,0.03948909661945435,0.11172012088209257,0.0981229226966224,0.024141889873839154,0.02540360530486737,0.08596832382227781,0.073009229753346,0.029262953325560382,0.13898436222076854,0.14749265481515592)
#?log
fit <- lm(y.test ~ x1.test + x2.test)
summary(fit)
fit
# new test with randomized datapoints to compare with Java Results
x1.random <- c(2.6390573296152584,1.0986122886681098,2.772588722239781,3.295836866004329,0.6931471805599453,3.6109179126442243,1.6094379124341003,2.1972245773362196,3.4011973816621555,1.791759469228055,3.332204510175204,1.6094379124341003,1.3862943611198906,1.6094379124341003,1.0986122886681098,1.3862943611198906,2.6390573296152584,2.4849066497880004,0.6931471805599453,0.6931471805599453)
x2.random <- c(7.272398392570047,2.3978952727983707,2.5649493574615367,2.772588722239781,2.0794415416798357,0.0,2.8903717578961645,3.9318256327243257,3.091042453358316,1.791759469228055,4.762173934797756,1.9459101490553132,2.0794415416798357,3.4657359027997265,4.174387269895637,2.302585092994046,5.429345628954441,3.5263605246161616,2.0794415416798357,4.48863636973214)
y.random <- c(0.5103698665557886,0.06258533725369518,0.12715494426192991,0.18706485014751498,0.0,0.01391734794802006,0.10378078359964121,0.07500496128175987,0.10775878416808246,0.0617105556277457,0.25735836074637314,0.061885035916330794,0.06118790337413626,0.061885035916330794,0.03618242116277272,0.061885035916330794,0.23009934914025962,0.1115991899083132,0.030942517958165397,0.0195936510734699)
fit <- lm(y.random ~ x1.random + x2.random)
sm <- summary(fit)
fit
library(MASS)
studres(fit)
stdres(fit)
mse <- function(sm) {
mse <- mean(sm$residuals^2)
return(mse)
}
mse(sm)
sm$coefficients
# 4th entry for comparison
rawResidual <- y.random[4] - (sm$coefficients[1,1] + x1.random[4]*sm$coefficients[2,1] + x2.random[4]*sm$coefficients[3,1])
rawResidual
mse(sm)
hii <- 0.15263686453386827
rawResidual / sqrt(mse(sm) * sqrt(1-hii))
sqrt(mse(sm) * sqrt(1-hii))
rawResidual
0.03272767784564373/ sqrt(0.004043417020840515 * (1-0.15263686453386827))
# R technically loses precision compared to Java. The
# 0.03272768/0.05501769 = 0.5948574
#0.03272767784564373/0.05278612119253022 = 0.6200054
# but the studres function for the 4th index gives: 0.55995704
hatvalues(fit)
hatvalues(fit)$hat
lev <- hat(model.matrix(fit))
lev
y.simple <- c(1,2,3)
x1.simple <- c(3, 4, 5)
x2.simple <- c(1, 5, 10)
fit (y.simple ~ x1.simple + x2.simple)
fit.simple <- lm(y.simple ~ x1.simple + x2.simple)
fit.simple
hatvalues(fit.simple)
y.simple <- c(1,2,3)
x1.simple <- c(3.5, 4, 5)
x2.simple <- c(1, 5, 10)
fit.simple <- lm(y.simple ~ x1.simple + x2.simple)
fit.simple
hatvalues(fit.simple)
lev.simple
lev.simple <- hatvalues(fit.simple)
lev.simple
lev.simple[1][1]
lev.simple[1]
lev.simple <- hat(model.matrix(fit.simple))
lev.simple
y.simple <- c(1,2,3)
x1.simple <- c(3.5, 4, 5)
x2.simple <- c(1, 5.7, 10)
fit.simple <- lm(y.simple ~ x1.simple + x2.simple)
fit.simple
lev.simple <- hatvalues(fit.simple)
lev.simple <- hatvalues(fit.simple)
lev.simple
lev.simple <- hat(model.matrix(fit.simple))
lev.simple
y.simple <- c(0.5103698665557886,0.06258533725369518,0.12715494426192991)
x1.simple <- c(2.6390573296152584, 1.0986122886681098,2.772588722239781)
x2.simple <- c(7.272398392570047,2.3978952727983707,2.5649493574615367)
fit.simple <- lm(y.simple ~ x1.simple + x2.simple)
fit.simple
lev.simple <- hatvalues(fit.simple)
lev.simple
lev.simple <- hat(model.matrix(fit.simple))
lev.simple
?hat
?hatvalues
cov(3,2)
?cov
hatvalues
methods(hatvalues)
getAnywhere('hatvalues.default')
getAnywhere('hatvalues')
stats:::hatvalues
getAnywhere('stats.hatvalues')
getAnywhere('stats:::hatvalues')
getAnywhere('hatvalues')
maethods(hatvalues)
methods(hatvalues)
hatvalues.lm(fit)
stats:::hatvalues.lm
setNames
#data_RInput <- read.csv("~/Documents/Phenoscape/data/results/data_RInput", header=FALSE)
data_RInput <- read.csv("~/Projects/compute-expect/data/results/data_RInput", header=FALSE)
data_RInput <- read.csv("~/Projects/compute-expect/data/results/data_RInput", header=FALSE)
design.matrix <- matrix(1, nrow = nrow(data_RInput), ncol=3)
design.matrix[,2] <- data_RInput[,2]
design.matrix[,3] <- data_RInput[,3]
design.matrix
design.matrix <- matrix(1, nrow = nrow(data_RInput), ncol=3)
design.matrix[,2] <- data_RInput[,2]
design.matrix[,3] <- data_RInput[,3]
design.matrix
design.matrix <- matrix(1, nrow = nrow(data_RInput), ncol=3)
design.matrix[,2] <- data_RInput[,2]
design.matrix[,3] <- data_RInput[,3]
design.matrix
design.squared <- solve(t(design.matrix) %*% design.matrix)
design.squared
hat.matrix <- design.matrix %*% solve(t(design.matrix) %*% design.matrix) %*% t(design.matrix)
hatvalues(fit)
fit
View(data_RInput)
design.matrix[term,]
term <- 2
design.matrix[term,]
design.matrix[term,] %*% design.squared %*% design.matrix[term,]
x1.random <- c(2.6390573296152584,1.0986122886681098,2.772588722239781,3.295836866004329,0.6931471805599453,3.6109179126442243,1.6094379124341003,2.1972245773362196,3.4011973816621555,1.791759469228055,3.332204510175204,1.6094379124341003,1.3862943611198906,1.6094379124341003,1.0986122886681098,1.3862943611198906,2.6390573296152584,2.4849066497880004,0.6931471805599453,0.6931471805599453)
x2.random <- c(7.272398392570047,2.3978952727983707,2.5649493574615367,2.772588722239781,2.0794415416798357,0.0,2.8903717578961645,3.9318256327243257,3.091042453358316,1.791759469228055,4.762173934797756,1.9459101490553132,2.0794415416798357,3.4657359027997265,4.174387269895637,2.302585092994046,5.429345628954441,3.5263605246161616,2.0794415416798357,4.48863636973214)
y.random <- c(0.5103698665557886,0.06258533725369518,0.12715494426192991,0.18706485014751498,0.0,0.01391734794802006,0.10378078359964121,0.07500496128175987,0.10775878416808246,0.0617105556277457,0.25735836074637314,0.061885035916330794,0.06118790337413626,0.061885035916330794,0.03618242116277272,0.061885035916330794,0.23009934914025962,0.1115991899083132,0.030942517958165397,0.0195936510734699)
design.matrix <- matrix(1, nrow = length(x1.random), ncol=3)
design.matrix[,2] <- x1.random
design.matrix[,3] <- x2.random
design.matrix
hat.matrix <- design.matrix %*% solve(t(design.matrix) %*% design.matrix) %*% t(design.matrix)
hatvalues(fit)
hat.matrix[1,1]
hat.matrix[2,2]
design.squared <- solve(t(design.matrix) %*% design.matrix)
design.squared
design.matrix <- matrix(1, nrow = length(x1.random), ncol=3)
design.matrix[,2] <- x1.random
design.matrix[,3] <- x2.random
design.matrix
hat.matrix <- design.matrix %*% solve(t(design.matrix) %*% design.matrix) %*% t(design.matrix)
hatvalues(fit)
hat.matrix[1,1]
hat.matrix[2,2]
design.squared <- solve(t(design.matrix) %*% design.matrix)
design.squared <- solve(t(design.matrix) %*% design.matrix)
hat.matrix.test1 <- design.matrix[1,] %*% design.squared %*% design.matrix[1,]
hat.matrix.test2
hat.matrix.test1
fit <- lm(y.random ~ x1.random + x2.random)
fit
hatvalues(fit)
x1.random <- c(2.6390573296152584,1.0986122886681098,2.772588722239781,3.295836866004329,0.6931471805599453,3.6109179126442243,1.6094379124341003,2.1972245773362196,3.4011973816621555,1.791759469228055,3.332204510175204,1.6094379124341003,1.3862943611198906,1.6094379124341003,1.0986122886681098,1.3862943611198906,2.6390573296152584,2.4849066497880004,0.6931471805599453,0.6931471805599453)
x2.random <- c(7.272398392570047,2.3978952727983707,2.5649493574615367,2.772588722239781,2.0794415416798357,0.0,2.8903717578961645,3.9318256327243257,3.091042453358316,1.791759469228055,4.762173934797756,1.9459101490553132,2.0794415416798357,3.4657359027997265,4.174387269895637,2.302585092994046,5.429345628954441,3.5263605246161616,2.0794415416798357,4.48863636973214)
y.random <- c(0.5103698665557886,0.06258533725369518,0.12715494426192991,0.18706485014751498,0.0,0.01391734794802006,0.10378078359964121,0.07500496128175987,0.10775878416808246,0.0617105556277457,0.25735836074637314,0.061885035916330794,0.06118790337413626,0.061885035916330794,0.03618242116277272,0.061885035916330794,0.23009934914025962,0.1115991899083132,0.030942517958165397,0.0195936510734699)
fit <- lm(y.random ~ x1.random + x2.random)
design.matrix <- matrix(1, nrow = length(x1.random), ncol=3)
design.matrix[,2] <- x1.random
design.matrix[,3] <- x2.random
design.matrix
hat.matrix <- design.matrix %*% solve(t(design.matrix) %*% design.matrix) %*% t(design.matrix)
hatvalues(fit)
hat.matrix[1,1]
hat.matrix[2,2]
hatvalues(fit)
hat.matrix.test1 <- design.matrix[1,] %*% design.squared %*% design.matrix[1,]
hat.matrix.test1
0.152design.matrix[]
design.matrix[1,]
design.matrix[1,]
